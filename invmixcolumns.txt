library ieee;
use ieee.std_logic_1164.all;
library LIB_AES;
use LIB_AES.crypt_pack.all;------------
library LIB_RTL;

--entity
entity invmixcolumns is
  port (
    data_i : in type_state;
    enable : in std_logic;
    data_o : out type_state);

end entity invmixcolumns;

--arch
architecture invmixcolumns_arch of invmixcolumns is
  component invmixcolumn
    port (
      data_i : in column_state;
      data_o : out column_state
    );
  end component;

  signal data_o_s : type_state;

begin

  G1 : for J in 0 to 3 generate
    invmixcolumn_n : invmixcolumn
    port map(
      -- input
      data_i(0) => data_i(0)(J),
      data_i(1) => data_i(1)(J),
      data_i(2) => data_i(2)(J),
      data_i(3) => data_i(3)(J),
      -- output
      data_o(0) => data_o_s(0)(J),
      data_o(1) => data_o_s(1)(J),
      data_o(2) => data_o_s(2)(J),
      data_o(3) => data_o_s(3)(J)
    );
  end generate G1;
  data_o <= data_i when enable = '0'
    else
    data_o_s;-- is mixcolumns enable?

end architecture;

configuration invmixcolumns_conf of invmixcolumns is
  for invmixcolumns_arch
    for G1
      for invmixcolumn_n : invmixcolumn
        use entity lib_rtl.invmixcolumn(invmixcolumn_arch);
      end for;
    end for;
  end for;
end configuration invmixcolumns_conf;
